import java.util.Scanner;
public class Triplet
{
    private double first;
    private double second;
    private double third;
    public Triplet()
    {
        Scanner sc = new Scanner(System.in);
        System.out.println("请输入三元组中的第一项值：");
        this.first = sc.nextDouble();
        System.out.println("请输入三元组中的第二项值：");
        this.second = sc.nextDouble();
        System.out.println("请输入三元组的中第三项值：");
        this.third = sc.nextDouble();
    }
    public double getFirst()
    {
        return this.first;
    }
    public double getSecond()
    {
        return this.second;
    }
    public double getThird()
    {
        return this.third;
    }
    //打印三元组
    public void display()
    {
        System.out.println("Triplet:("+ this.first +","+ this.second +","+ this.third +")");
    }
    //销毁三元组
    public void destroy()
    {
        this.first = 0;
        this.second = 0;
        this.third = 0;
    }
    //找出三元组中最大值的方法
    public double getMax()
    {
        return Math.max(this.first,Math.max(this.second,this.third));
    }
    //找出三元组中最小值的方法
    public double getMin()
    {
        return Math.min(this.first,Math.min(this.second,this.third));
    }
    //修改三元组的方法
    public void modifyTriplet()
    {
        Scanner sc = new Scanner(System.in);
        System.out.println("请输入你想要修改三元组中的那位数值:(1/2/3)");
        int component = sc.nextInt();
        System.out.println("请输入新的值：");
        double newValue = sc.nextDouble();
        if(component == 1)
        {
            this.first = newValue;
        }
        else if(component == 2)
            {
                this.second = newValue;
            }
        else if(component ==3)
            {
                this.third = newValue;
            }
            else
            {
                System.out.println("选项无效");
            }
        

    }
    public static void main(String[] args)
    {
        Triplet t  = new Triplet();
        Scanner sc = new Scanner(System.in);
        //使用WHILE循环来进行菜单操作
        while(true)
        {
            System.out.println("--------------------三元组操作菜单--------------------");
            System.out.println("---------------------1.打印三元组---------------------");
            System.out.println("---------------------2.获取最大分量-------------------");
            System.out.println("---------------------3.获取最小分量-------------------");
            System.out.println("---------------------4.修改分量-----------------------");
            System.out.println("---------------------5.销毁三元组---------------------");
            System.out.println("---------------------6.三元组取值---------------------");
            System.out.println("---------------------7.退出---------------------------");
            int choice = sc.nextInt();
            switch(choice)
            {
            case 1:
                t.display();
                break;
            case 2:
                System.out.println("最大分量是：" + t.getMax());
                break;
            case 3:
                System.out.println("最小分量是：" + t.getMin());
                break;
            case 4:
                t.modifyTriplet();
                break;
            case 5:
                t.destroy();
                break;
            case 6:
                System.out.println("从三元组中选择哪一项？ (1/2/3)");
                int itemChoice = sc.nextInt();
                switch (itemChoice) {
                    case 1:
                        System.out.println("第一项值是：" + t.getFirst());
                        break;
                    case 2:
                        System.out.println("第二项值是：" + t.getSecond());
                        break;
                    case 3:
                        System.out.println("第三项值是：" + t.getThird());
                        break;
                    default:
                        System.out.println("选项无效");
                }
                break;
            case 7:
                System.out.println("退出程序");
                break;
            default:
                System.out.println("选项无效！！！");
                break;
            }
        }
    }

}
